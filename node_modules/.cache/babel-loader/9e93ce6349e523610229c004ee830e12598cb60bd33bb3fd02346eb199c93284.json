{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nexport const fetchTodos = createAsyncThunk('todos/fetchTodos', async function (_, _ref) {\n  let {\n    rejectWithValue\n  } = _ref;\n  const response = await fetch('https://jsonplaceholder.typicode.com/todos?_limit=10');\n  if (!response.ok) {\n    return rejectWithValue('Server Error!');\n  }\n  const data = await response.json();\n  return data;\n});\nexport const addNewTodo = createAsyncThunk('todos/addNewTodo', async function (text, _ref2) {\n  let {\n    rejectWithValue\n  } = _ref2;\n  const todo = {\n    title: text,\n    userId: 1,\n    completed: false\n  };\n  const response = await fetch('https://jsonplaceholder.typicode.com/todos', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(todo)\n  });\n  if (!response.ok) {\n    return rejectWithValue('Can\\'t add task. Server error.');\n  }\n  return await response.json();\n});\nexport const toggleStatus = createAsyncThunk('todos/toggleStatus', async function (id, _ref3) {\n  let {\n    rejectWithValue,\n    getState\n  } = _ref3;\n  const todo = getState().todos.list.find(todo => todo.id === id);\n  if (todo) {\n    const response = await fetch(`https://jsonplaceholder.typicode.com/todos/${id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        completed: !todo.completed\n      })\n    });\n    if (!response.ok) {\n      return rejectWithValue('Can\\'t toggle status. Server error.');\n    }\n    return await response.json();\n  }\n  return rejectWithValue('No such todo in the list.');\n});\nexport const deleteTodo = createAsyncThunk('todos/deleteTodo', async function (id, _ref4) {\n  let {\n    rejectWithValue\n  } = _ref4;\n  const response = await fetch(`https://jsonplaceholder.typicode.com/todos/${id}`, {\n    method: 'DELETE'\n  });\n  if (!response.ok) {\n    return rejectWithValue('Can\\'t delete task. Server error.');\n  }\n  return id;\n});\nconst initialState = {\n  list: [],\n  loading: false,\n  error: null\n};\nconst todoSlice = createSlice({\n  name: 'todos',\n  initialState,\n  reducers: {},\n  extraReducers: builder => builder.addCase(fetchTodos.pending, state => {\n    state.loading = true;\n    state.error = null;\n  }).addCase(fetchTodos.fulfilled, (state, action) => {\n    state.loading = false;\n    state.list = action.payload;\n  }).addCase(addNewTodo.pending, state => {\n    state.error = null;\n  }).addCase(addNewTodo.fulfilled, (state, action) => {\n    state.list.push(action.payload);\n  }).addCase(toggleStatus.fulfilled, (state, action) => {\n    const toggledTodo = state.list.find(todo => todo.id === action.payload.id);\n    if (toggledTodo) toggledTodo.completed = !toggledTodo.completed;\n  }).addCase(deleteTodo.fulfilled, (state, action) => {\n    state.list = state.list.filter(todo => todo.id !== action.payload);\n  }).addMatcher(isError, (state, action) => {\n    state.error = action.payload;\n    state.loading = false;\n  })\n});\nexport default todoSlice.reducer;\nfunction isError(action) {\n  return action.type.endsWith('rejected');\n}","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchTodos","_","_ref","rejectWithValue","response","fetch","ok","data","json","addNewTodo","text","_ref2","todo","title","userId","completed","method","headers","body","JSON","stringify","toggleStatus","id","_ref3","getState","todos","list","find","deleteTodo","_ref4","initialState","loading","error","todoSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","push","toggledTodo","filter","addMatcher","isError","reducer","type","endsWith"],"sources":["/Users/egorkush/WebstormProjects/todo-rtk-async-ts-2/src/store/todoSlice.ts"],"sourcesContent":["import {createSlice, createAsyncThunk, AnyAction} from '@reduxjs/toolkit'\n\ntype Todo = {\n  id: string\n  title: string\n  completed: boolean\n}\n\ntype TodosState = {\n  list: Todo[]\n  loading: boolean\n  error: string | null\n}\n\nexport const fetchTodos = createAsyncThunk<Todo[], undefined, { rejectValue: string }>(\n  'todos/fetchTodos',\n    async function(_, { rejectWithValue }) {\n  const response = await fetch('https://jsonplaceholder.typicode.com/todos?_limit=10')\n  if (!response.ok) {\n    return rejectWithValue('Server Error!')\n  }\n  const data = await response.json()\n  return data\n  }\n)\n\nexport const addNewTodo = createAsyncThunk<Todo, string, { rejectValue: string }>(\n    'todos/addNewTodo',\n    async function (text, { rejectWithValue }) {\n        const todo = {\n          title: text,\n          userId: 1,\n          completed: false,\n        }\n        const response = await fetch('https://jsonplaceholder.typicode.com/todos', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(todo)\n        })\n        if (!response.ok) {\n          return rejectWithValue('Can\\'t add task. Server error.')\n        }\n        return (await response.json()) as Todo\n    }\n)\n\nexport const toggleStatus = createAsyncThunk<Todo, string, { rejectValue: string, state: { todos: TodosState } }>(\n  'todos/toggleStatus',\n  async function (id, { rejectWithValue, getState }) {\n    const todo = getState().todos.list.find(todo => todo.id === id)\n    if (todo) {\n      const response = await fetch(`https://jsonplaceholder.typicode.com/todos/${id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          completed: !todo.completed,\n        })\n      })\n      if (!response.ok) {\n        return rejectWithValue('Can\\'t toggle status. Server error.')\n      }\n      return (await response.json()) as Todo\n    }\n      return rejectWithValue('No such todo in the list.')\n  }\n)\n\nexport const deleteTodo = createAsyncThunk<string, string, { rejectValue: string }>(\n    'todos/deleteTodo',\n    async function(id, { rejectWithValue }) {\n            const response = await fetch(`https://jsonplaceholder.typicode.com/todos/${id}`, {\n                method: 'DELETE',\n            })\n            if (!response.ok) {\n                return rejectWithValue('Can\\'t delete task. Server error.')\n            }\n        return id\n    }\n)\n\nconst initialState: TodosState = {\n  list: [],\n  loading: false,\n  error: null\n}\n\nconst todoSlice = createSlice({\n  name: 'todos',\n  initialState,\n  reducers: {},\n  extraReducers: builder => builder\n      .addCase(fetchTodos.pending, state => {\n        state.loading = true\n        state.error = null\n      })\n      .addCase(fetchTodos.fulfilled, (state, action) => {\n        state.loading = false\n        state.list = action.payload\n      })\n      .addCase(addNewTodo.pending, state => {\n          state.error = null\n      })\n      .addCase(addNewTodo.fulfilled, (state, action) => {\n        state.list.push(action.payload)\n      })\n      .addCase(toggleStatus.fulfilled, (state, action) => {\n        const toggledTodo = state.list.find(todo => todo.id === action.payload.id)\n          if (toggledTodo) toggledTodo.completed = !toggledTodo.completed\n      })\n      .addCase(deleteTodo.fulfilled, (state, action) => {\n          state.list = state.list.filter(todo => todo.id !== action.payload)\n      })\n      .addMatcher(isError, (state, action) => {\n          state.error = action.payload\n          state.loading = false\n      })\n})\n\nexport default todoSlice.reducer\n\nfunction isError(action: AnyAction) {\n    return action.type.endsWith('rejected')\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}